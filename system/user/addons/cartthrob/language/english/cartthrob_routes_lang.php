<?php

$lang = [
    'ct.route.saving' => 'Saving...',
    'saving' => 'Saving...',
    'ct.route.add' => 'Add',
    'ct.route.adding' => 'Adding...',
    'ct.route.channel_name' => 'Channel Name',
    'ct.route.the_channel_that_stores_product_details' => 'The Channel that you\'ll be storing Product data CartThrob will use.',
    'ct.route.the_channel_that_stores_purchased_item_details' => 'The Channel that you\'ll be storing Purchased Item data CartThrob will use.',
    'ct.route.form.orders_channel_name.note' => 'The Channel that you\'ll be storing Order data into.',
    'ct.route.channel_id' => 'Channel ID',
    'ct.route.channel_short_name' => 'Channel Short Name',
    'ct.route.total_products' => 'Total Products',
    'ct.route.total_products.note' => 'The number of Products created within the Channel',
    'invalid_license_number_value' => 'Invalid License Number',

    'ct.route.nav.addons' => 'Addons',
    'ct.route.nav.cartthrob' => 'CartThrob',
    'ct.route.nav.settings_files' => 'Settings Files',
    'ct.route.nav.utilities' => 'Utilities',
    'ct.route.nav.general_settings' => 'General Global Settings',
    'ct.route.nav.products' => 'Products',
    'ct.route.nav.orders' => 'Orders',
    'ct.route.nav.cart_sessions_settings' => 'Cart / Sessions',
    'ct.route.nav.purchased_items' => 'Purchased Items',
    'ct.route.nav.members' => 'Members',
    'ct.route.nav.notifications' => 'Notifications',
    'ct.route.nav.shipping' => 'Shipping',
    'ct.route.nav.taxes' => 'Taxes',
    'ct.route.nav.discounts' => 'Discounts',
    'ct.route.nav.coupons' => 'Coupons',
    'ct.route.nav.payment_gateways' => 'Payments',
    'ct.route.nav_installation' => 'Installation',
    'ct.route.nav.docs' => 'Documentation',
    'ct.route.nav.vaults' => 'Manage Vaults',

    'ct.route.header.cart_settings' => 'Cart',
    'ct.route.header.session_settings' => 'Sessions',
    'ct.route.header.product_edit_channel' => 'Edit Product Channel Fields',
    'ct.route.header.cart_sessions_settings' => 'Cart / Sessions',
    'ct.route.header.product_add_channel' => 'Add Product Channel',
    'ct.route.header.product_remove_channel' => 'Remove Product Channel',
    'ct.route.header.notification.remove' => 'Remove Notification',
    'ct.route.header.notification.edit' => 'Update Notification',
    'ct.route.header.coupons_settings' => 'Coupons',
    'ct.route.header.discounts_settings' => 'Discounts',
    'ct.route.header.purchased_items_set_channel' => 'Set Purchased Items Channel',
    'ct.route.header.coupons_set_channel' => 'Set Coupons Channel',
    'ct.route.header.discounts_set_channel' => 'Set Discounts Channel',
    'ct.route.header.orders_set_channel' => 'Set Orders Channel',
    'ct.route.header.shipping_options' => 'Shipping Plugins',
    'ct.route.header.payments_options' => 'Payments',
    'ct.route.header.taxes_options' => 'Taxes',
    'ct.route.header.order_billing_fields' => 'Billing Fields',
    'ct.route.header.order_shipping_fields' => 'Shipping Fields',
    'ct.route.header.purchased_items_fields' => 'Data Fields',
    'ct.route.header.purchased_items_status' => 'Status',
    'ct.route.header.notification.copy' => 'Copy Notification',

    'ct.route.confirm_removal' => 'Confirm Removal',
    'ct.route.confirm_removal.note' => 'Are you sure you want to remove this Channel from being used by CartThrob?',
    'ct.route.purchased_items_status_pending' => 'Payment Pending',
    'ct.route.purchased_items_status_expired' => 'Payment Expired',
    'ct.route.purchased_items_status_canceled' => 'Payment Cancelled',
    'ct.route.purchased_items_status_voided' => 'Payment Voided',
    'ct.route.purchased_items_status_refunded' => 'Payment Refunded',
    'ct.route.purchased_items_status_reversed' => 'Payment Reversed',
    'ct.route.purchased_items_status_offsite' => 'Payment Offsite',

    'ct.route.notification.existing_notifications' => 'Existing Notifications',
    'ct.route.notification.subject' => 'Subject',
    'ct.route.notification.event' => 'Event',
    'ct.route.notification.to_emails' => 'To Emails',
    'ct.route.notification.add_notification' => 'Add Notification',
    'ct.route.notification.create' => 'Create Notification',
    'ct.route.creating' => 'Creating',
    'ct.route.invalid_notification' => 'Invalid Notification',
    'ct.route.notification.confirm_removal' => 'Confirm Removal',
    'ct.route.notification.confirm_removal_note' => 'Are you sure you want to remove this Notification from used by CartThrob?',
    'ct.route.notification.only_one_allowed' => 'Only one item is allowed',
    'ct.route.notification.invalid_email' => 'Invalid Email',
    'ct.route.notification.email_subject_note' => 'The Email Subject you want to use for this Notification',
    'ct.route.notification.email_from_name_note' => 'The Name the FROM portion of the Email will use.',
    'ct.route.notification.email_from_note' => 'The Email Address you want this Notification to come from. Note this can be different from the Reply to Address',
    'ct.route.notification.email_reply_to_name_note' => 'The name any replies will use.',
    'ct.route.notification.email_reply_to_note' => 'The Email Address all replies will be sent to. Ideally, this should exist even if it\'s just for dispposal.',
    'ct.route.notification.email_to_note' => 'Whom do you want this Notification to go to. If you want to send to the customer use {customer_email}. Be sure to seperate multiple emails by a comma.',
    'ct.route.notification.email_event_note' => 'When do you want this Notification to send?',
    'ct.route.notification.email_template_note' => 'Which ExpressionEngine template do you want to use for the Email content?',
    'ct.route.notification.starting_status_note' => 'What status should the Order start with to be considered for a Notification?',
    'ct.route.notification.ending_status_note' => 'What status must the Order be changed to in order to send the Notification?',
    'ct.route.notification.email_type_note' => 'What format should the Email be sent in? For most cases, HTML would be the ideal.',
    'ct.route.notification.email_from_name' => 'From Name',
    'ct.route.notification.email_from' => 'From Email',
    'ct.route.notification.email_reply_to_name' => 'Reply To Name',
    'ct.route.notification.email_reply_to' => 'Reply To Email',
    'ct.route.notification.email_template' => 'Email Template',
    'ct.route.notification.email_type' => 'Email Type',
    'ct.route.notification.starting_status' => 'Starting Status',
    'ct.route.notification.emdomg_status' => 'Ending Status',
    'ct.route.notification.type' => 'Type',
    'ct.route.notification.title' => 'Title',
    'ct.route.notification.title_note' => 'Descriptive name for this Notification',
    'ct.route.notification.template' => 'Template',
    'ct.route.notification.template_note' => 'Which ExpressionEngine template do you want to use for the Notification content?',
    'ct.route.notification.type_note' => 'How do you want this Notification delivered and to where?',
    'ct.route.notification.fields' => 'Notification Type Specific Details',
    'ct.route.notification.ending_status' => 'Ending Status',
    'ct.route.notification.error.invalid_email' => 'Invalid Email',
    'ct.route.notification.error.only_one_email_allowed' => 'Only One Email Allowed',

    'ct.route.tax.standalone_tax_database' => 'Standalone Tax Database',
    'ct.route.tax.standalone_tax_database.edit' => 'Edit Tax',
    'ct.route.tax.standalone_tax_database.add' => 'Add Tax',
    'ct.route.tax.standalone_tax_database.remove' => 'Remove Tax',
    'ct.route.tax.standalone_tax_database.updated' => 'Standalone Tax Database Updated!',
    'ct.route.tax.standalone_tax_database.not_found' => 'Standalone Tax Database Not Found',
    'ct.route.tax.standalone_tax_database.id' => 'ID',
    'ct.route.tax.standalone_tax_database.tax_name' => 'Name',
    'ct.route.tax.standalone_tax_database.percent' => 'Percent',
    'ct.route.tax.standalone_tax_database.shipping_taxable' => 'Tax Shipping',
    'ct.route.tax.standalone_tax_database.confirm_removal' => 'Confirm Removal',
    'ct.route.tax.standalone_tax_database.confirm_removal_note' => 'Are you sure you want to remove this Notification from used by CartThrob?',
    'ct.route.tax.standalone_tax_database.removed' => 'Tax Removed',
    'ct.route.tax.standalone_tax_database.tax_entries' => 'Standalone Tax Entries',

    'ct.route.nav.template_vars' => 'Template Variables',

    'nav_coupons' => 'Coupons',
    'the_channel_that_stores_coupons_details' => 'The Channel that you\'ll be storing Coupon data CartThrob will use.',
    'coupon_code_field_note' => 'Which ExpressionEngine Channel Entry field will contain the Coupon Code string customers will use for input?',
    'coupon_code_type_note' => 'The field that contains the Discount configurator FieldType?',
    'the_channel_that_stores_discounts_details' => 'The Channel that you\'ll be storing Discount data CartThrob will use.',
    'discount_type_note' => 'The field that contains the Discount configurator FieldType?',

    'the_channel_that_stores_purchase_item_details' => 'The Channel that you\'ll be storing Purchased Items data CartThrob will use.',
    'purchased_items_channel_form_description' => 'Set the specific ExpressionEngine Channel CartThrob will store Purchased Items into.',
    'discounts_settings_form_description' => 'Configure how Discount data is stored in your Entries',
    'coupons_settings_form_description' => 'Configure how Coupon data is stored in your Entries',
    'the_channel_that_stores_coupon_details' => 'The Channel that you\'ll be storing Coupons data CartThrob will use.',
    'coupons_channel_form_description' => 'Set the specific ExpressionEngine Channel CartThrob will store Coupons into.',
    'discounts_channel_form_description' => 'Set the specific ExpressionEngine Channel CartThrob will store Discounts into.',

    'the_channel_that_stores_orders_details' => 'The Channel that you\'ll be storing Orders data CartThrob will use.',
    'orders_channel_form_description' => 'Set the specific ExpressionEngine Channel CartThrob will store Orders into.',

    'msm' => 'Multi Site Manager',
    'orders' => 'Orders',

    'must_set_orders_channel' => 'You must set an ExpressionEngine Channel to store your Orders into',
    'must_set_purchased_items_channel' => 'You must set an ExpressionEngine Channel to store your Purchased Items into',
    'must_set_discounts_channel' => 'You must set an ExpressionEngine Channel to store your Discounts into',
    'must_set_coupons_channel' => 'You must set an ExpressionEngine Channel to store your Coupons into',

    'plugin_name' => 'Plugin Name',
    'active' => 'Active',

    'tax_plugins' => 'Tax Plugins',
    'ct.enabled' => 'Enabled',
    'plugin_enabled_description' => 'You can only have one Plugin of each type as at any one time.',
    'activate_plugin' => 'Activate Plugin',

    'payment_plugins' => 'Payment Plugins',
    'template_groups_install' => 'Install the following template groups and their templates',
    'template_groups' => 'Template Groups',
    'channels_install' => 'Install the following Channels and their data',
    'installation' => 'Installation',

    'ct.route.nav.tax_db' => 'Tax Database',
    'no_tax_settings' => 'No Tax Settings',

    'ct.route.add_member_fields' => 'Add Member Field(s)',
    'ct.route.add_channel' => 'Add Channel(s)',
    'ct.route.add_channel_field' => 'Add Channel Field(s)',
    'ct.route.nothing_here' => 'Nothing Here',
    'ct.route.details' => 'Details',
    'ct.route.value' => 'Value',
    'ct.route.override_values.desc' => 'If you need to create more advanced functionality, you can use the below strings to set your customer to the Gateway',
    'ct.route.override_values' => 'Override Values',

    'ct.error.invalid_super_admin_id' => 'That does not belong to a Super Admin',
    'ct.error.invalid_member_id' => 'Invalid Member',
    'ct.error.order_save_must_be_enabled' => 'Order Save to Channel MUST be enabled to save Purchased Items to Channel Entries',

    'ct.custom_sidebar.default_title' => 'CartThrob Pro',

    'ct.route.extload_action_url' => 'Extload Action URL',
    'ct.route.form.extload_action_url.note' => 'Some Payment Gateways require a URL to notify your site upon events with a payment. If your gateway requires it, use this.',

    'ct.save' => 'Save',
    'ct.na' => 'N/A',
    'ct.delete' => 'Delete',
    'ct.deleting' => 'deleting...',

    'ct.vault.not_found' => 'Vault Not Found',
    'ct.vaults' => 'Vaults',
    'ct.vault.member_id' => 'Member',
    'ct.vault.id' => 'ID',
    'ct.create.vault' => 'Create Vault',
    'ct.token' => 'Token',
    'ct.gateway' => 'Gateway',
    'ct.manage' => 'Manage',
    'ct.vault.new' => 'New Vault',
    'ct.vault.guest' => 'Guest',
    'ct.vault.customer_id' => 'Customer ID',
    'ct.vault.order_id' => 'Order ID',
    'ct.vault.gateway' => 'Gateway',
    'ct.vault.token' => 'Token',
    'ct.vault.last_four' => 'Last 4',
    'ct.vault.member_id.note' => 'The member_id for the specific Member this Vault is "owned" by.',
    'ct.vault.order_id.note' => 'Most Vaults have an Order associated with it, usually handled internally through the checkout/payment process. Not required. ',
    'ct.vault.token.note' => 'The actual token string to be used (in place of a payment source). Note that the Token value must be compatible with the gateway.',
    'ct.vault.gateway.note' => 'The gateway plugin to be used with this Vault. Note that the Token value must be compatible with the gateway.',
    'ct.vault.customer_id.note' => 'Provided by the gateway and used in conjunction with the Token. Not required.',
    'ct.vault.last_four.note' => 'The last 4 numbers of the attendant credit card on file associated with this Vault. Not required.',
    'ct.error.create.vault' => 'Error Creating Vault',
    'ct.vault.updated' => 'Vault Updated!',
    'ct.vault.edit' => 'Edit Vault',
    'ct.vault.delete' => 'Delete Vault',
    'ct.vault.deleted' => 'Vault Deleted',
    'ct.vault.confirm_delete' => 'Confirm Removal',
    'ct.vault.delete.note' => 'Are you sure you want to delete this Vault?',
];
